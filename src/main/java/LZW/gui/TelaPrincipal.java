package LZW.gui;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import Compressores.TextFile;
import LZW.Coder;
import LZW.Decoder;

/**
 * Frame principal do compressor.
 * <br><br>
 * Esse projeto faz parte de uma das atividades da disciplina de Introdução
 * à Teoria da Informação do Departamento de Informática da Universidade Federal
 * da Paraíba (UFPB) ministrada pelo professor Leonardo Vidal.
 *
 * @since desconhecido
 * @author Daniel Pires - dpsmetal[at]gmail.com
 * @author Elenilson Vieira - elenilson[at]elenilsonvieira.com
 * @author Wolgrand Cardoso - wolgrandcardoso[at]gmail.com
 * @version 1.0
 * @see www.di.ufpb.br
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private String nomeDoUltimoArquivoCodificado;
    private String extensaoDoUltimoArquivoCodificado;
    
    /** Creates new form LZWMain */
    public TelaPrincipal() {
        initComponents();
        jTextAreaMensagemComprimida.setEditable(false);
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaMensagemOriginal = new javax.swing.JTextArea();
        jButtonBotaoComprimir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMensagemComprimida = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaMensagemDescomprimida = new javax.swing.JTextArea();
        jButtonDescomprimir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compressor DWE");

        jTextAreaMensagemOriginal.setColumns(20);
        jTextAreaMensagemOriginal.setRows(5);
        jScrollPane1.setViewportView(jTextAreaMensagemOriginal);

        jButtonBotaoComprimir.setText("Comprimir");
        jButtonBotaoComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBotaoComprimirActionPerformed(evt);
            }
        });

        jTextAreaMensagemComprimida.setColumns(20);
        jTextAreaMensagemComprimida.setRows(5);
        jScrollPane2.setViewportView(jTextAreaMensagemComprimida);

        jLabel1.setText("Arquivo");

        jLabel2.setText("Mensagem Comprimida:");

        jTextAreaMensagemDescomprimida.setColumns(20);
        jTextAreaMensagemDescomprimida.setRows(5);
        jScrollPane3.setViewportView(jTextAreaMensagemDescomprimida);

        jButtonDescomprimir.setText("Descomprimir");
        jButtonDescomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescomprimirActionPerformed(evt);
            }
        });

        jLabel3.setText("Texto Descomprimido:");

        jButton3.setText("Limpar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Carregar Arquivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonDescomprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 494, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonBotaoComprimir, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jButtonBotaoComprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButtonDescomprimir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBotaoComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBotaoComprimirActionPerformed
        try {
            String mensagemCodificada = new Coder().codify(jTextAreaMensagemOriginal.getText());
            jTextAreaMensagemComprimida.setText(mensagemCodificada);

            if(nomeDoUltimoArquivoCodificado != null){
                TextFile textFile = new TextFile(nomeDoUltimoArquivoCodificado + ".lzw");
                textFile.setContent(mensagemCodificada);
            }
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonBotaoComprimirActionPerformed

    private void jButtonDescomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescomprimirActionPerformed
        if(!jTextAreaMensagemComprimida.getText().equals("")){
            String mensagemDescomprimida = new Decoder().decode(jTextAreaMensagemComprimida.getText());
            jTextAreaMensagemDescomprimida.setText(mensagemDescomprimida);

            if(nomeDoUltimoArquivoCodificado != null){
                try{
                    TextFile arquivoDescomprimido =
                        new TextFile(String.format("%s.decomprimido.%s",
                        nomeDoUltimoArquivoCodificado, extensaoDoUltimoArquivoCodificado));

                    arquivoDescomprimido.setContent(mensagemDescomprimida);
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this, "Erro ao gravar o arquivo!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonDescomprimirActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        limpar();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        carregarArquivo(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void limpar(){
        jTextAreaMensagemOriginal.setText("");
        jTextAreaMensagemComprimida.setText("");
        jTextAreaMensagemDescomprimida.setText("");
        nomeDoUltimoArquivoCodificado = null;
        extensaoDoUltimoArquivoCodificado = null;
    }

    @Override
    public void dispose(){
        int option = JOptionPane.showConfirmDialog(this,
                "Tem certeza que deseja sair?", "Informação", JOptionPane.YES_NO_OPTION);

        if(option != JOptionPane.NO_OPTION)
            System.exit(1);
    }

    private void carregarArquivo(boolean compressao){
        javax.swing.JFileChooser arquivo = new javax.swing.JFileChooser();

        arquivo.setFileSelectionMode( javax.swing.JFileChooser.FILES_ONLY );

        int resultadoArq = arquivo.showSaveDialog( null );
        String aux;

        if( resultadoArq == javax.swing.JFileChooser.CANCEL_OPTION)
                return;

            File arquivoNome = arquivo.getSelectedFile();
            aux = arquivoNome.toString();
            System.out.println(aux);

            if( arquivoNome == null || arquivoNome.getName().equals(""))
                javax.swing.JOptionPane.showMessageDialog( null, "Nome de Arquivo Inválido",
                    "Nome de Arquivo Inválido", javax.swing.JOptionPane.ERROR_MESSAGE );
            else{

                try{
                    TextFile originalTextFile = new TextFile(arquivo.getSelectedFile());
                    nomeDoUltimoArquivoCodificado = originalTextFile.getPath();
                    extensaoDoUltimoArquivoCodificado = originalTextFile.getExtension();
                    jTextAreaMensagemOriginal.setText(originalTextFile.getContent());
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this, "Não foi possível abrir o arquivo!", "Erro", JOptionPane.ERROR_MESSAGE);
                }

                /*
                try {
                coderL = new Coder(aux);
                jTextArea2.setText(new Coder().codify(jTextArea1.getText()));


                } catch (IOException ex) {
                    Logger.getLogger(MainFrameLZW.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTextAreaMensagemDescomprimida.setText(new Decoder().decode(jTextAreaMensagemComprimida.getText()));
                */
            }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
                //new Coder();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonBotaoComprimir;
    private javax.swing.JButton jButtonDescomprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaMensagemComprimida;
    private javax.swing.JTextArea jTextAreaMensagemDescomprimida;
    private javax.swing.JTextArea jTextAreaMensagemOriginal;
    // End of variables declaration//GEN-END:variables

}
