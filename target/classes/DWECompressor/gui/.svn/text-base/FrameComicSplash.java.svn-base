/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrameComicSplash.java
 *
 * Created on Jun 14, 2010, 9:35:35 PM
 */

package br.ufpb.di.itidiscipline.dwe.dwecompressor.gui;

import java.awt.image.BufferedImage;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author elenilson
 */
public class FrameComicSplash extends javax.swing.JFrame {

    public static final int NUMBER_OF_COMIC_IMAGES = 10;
    public static final String COMIC_IMAGES_PATH = "/br/ufpb/di/itidiscipline/dwe/dwecompressor/images/comic/";
    public static final Random RANDOM = new Random();

    /** Creates new form FrameComicSplash */
    public FrameComicSplash(java.awt.Frame parent) {
        initComponents();
        setLocationRelativeTo(parent);
        setRandomComicImage();
    }

    @Override
    public void setVisible(boolean b){
        if(b)
            setRandomComicImage();

        super.setVisible(b);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelComicTrip = new javax.swing.JLabel();

        setTitle("Working");

        jLabelComicTrip.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelComicTrip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/ufpb/di/itidiscipline/dwe/dwecompressor/images/comic/comic_5.jpg"))); // NOI18N
        jLabelComicTrip.setBorder(javax.swing.BorderFactory.createTitledBorder("While you wait..."));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelComicTrip, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelComicTrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void setRandomComicImage() {
        int imageNumber = RANDOM.nextInt(NUMBER_OF_COMIC_IMAGES);

        String image = String.format("%scomic_%d.jpg", COMIC_IMAGES_PATH, imageNumber);
        try{
            BufferedImage im = ImageIO.read(DialogSplash.class.getResourceAsStream(image));
            jLabelComicTrip.setIcon(new ImageIcon(im));
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameComicSplash(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelComicTrip;
    // End of variables declaration//GEN-END:variables

}
